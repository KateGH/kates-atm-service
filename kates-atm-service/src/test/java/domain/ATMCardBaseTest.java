package domain;import org.junit.Test;import java.math.BigDecimal;import java.util.GregorianCalendar;import static org.junit.Assert.assertTrue;public abstract class ATMCardBaseTest {    protected Card atmCard;    protected static final BigDecimal DEFAULT_BALANCE = BigDecimal.valueOf(1000.000);    protected static final String DEFAULT_OWNER_NAME = "Kate";    protected static final Integer DEFAULT_CARD_NUMBER = 1;    protected static final GregorianCalendar DEFAULT_EXPIRATION_DATE = new GregorianCalendar(2018, 10, 31);    public ATMCardBaseTest(Card atmCard) {        this.atmCard = atmCard;    }    @Test    public void withdraw() throws Exception {        BigDecimal withdrawAmount = BigDecimal.TEN;        atmCard.withdraw(withdrawAmount);        assertTrue(atmCard.getBalance().equals(DEFAULT_BALANCE.subtract(withdrawAmount)));    }    @Test    public void getBalance() throws Exception {        assertTrue(atmCard.getBalance().equals(DEFAULT_BALANCE);    }    @Test    public void getOwnerName() throws Exception {        assertTrue(atmCard.getOwnerName().equals(DEFAULT_OWNER_NAME);    }    @Test    public void getCardNumber() throws Exception {        assertTrue(atmCard.getCardNumber() == DEFAULT_CARD_NUMBER);    }    @Test    public void getExpirationDate() throws Exception {        assertTrue(atmCard.getExpirationDate()).compareTo(DEFAULT_EXPIRATION_DATE) == 0;    }    @Test    public void deposit() throws Exception {        BigDecimal depositAmount = BigDecimal.TEN;        atmCard.deposit(depositAmount);        assertTrue(atmCard.getBalance().equals(DEFAULT_BALANCE.add(depositAmount));    }}