import retrofit2.Call;import retrofit2.Retrofit;import retrofit2.converter.jackson.JacksonConverterFactory;import retrofit2.http.GET;import retrofit2.http.Path;import retrofit2.http.Query;import java.math.BigDecimal;public interface ATMClient {    static ATMClient create(Endpoint endpoint) {        ClientBuilder clientBuilder = ClientBuilder.newClient().trustAllSSLCerts();        Retrofit.Builder builder = new Retrofit.Builder();        Retrofit retrofit = builder                .baseUrl(endpoint.getBaseUrl())                .addConverterFactory(JacksonConverterFactory.create())                .client(clientBuilder.build())                .build();        return retrofit.create(ATMClient.class);    }    @GET("{cardNumber}")    Call<CardResponse> getCard(            @Path("cardNumber") Integer cardNumber);    @GET("{cardNumber}/deposit")    Call<DepositResponse> getDeposit(            @Path("cardNumber") Integer cardNumber,            @Query("amount") BigDecimal amount);    @GET("{cardNumber}/withdraw")    Call<WithdrawResponse> getWithdraw(            @Path("cardNumber") Integer cardNumber,            @Query("amount") BigDecimal amount);}